AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  AWS  SAM Template for common resources between NVA stacks


Parameters:
  BackendDomainCertificateArn:
    Type: String
    Description: ARN for the certificate covering the API host/domain/API Gateway Custom Domain. The value is stored in Region us-east-1.
  FrontendDomainCertificateArn:
    Type: String
    Description: ARN for the certificate covering the API host/domain/API Gateway Custom Domain. The value is stored in Region us-east-1.
  CustomDomain:
    Type: String
    Description: The domain of the NVA related services. This part of the domain is common to both backend and frontend services. Eg. dev.nva.aws.unit.no or nva.unit.no.
  AlmaApiUri:
    Type: String
    Description: URI to Alma API.
    Default: 'https://bibsys.alma.exlibrisgroup.com/view/sru/47BIBSYS_NETWORK'
  BareHostUri:
    Type: String
    Description: URI to BARE API.
  DataCiteMdsEndpoint:
    Type: String
    Description: URI to Datacite MDS endpoint.
  DataCiteRestEndpoint:
    Type: String
    Description: URI to Datacite Rest endpoint.
  OrcidBaseUrl:
    Type: String
    Description: URL for communicating with ORCID
  ApiGatewayEndpointType:
    Type: String
    Default: EDGE
    Description: The ApiGateway Endpoint Type
  DockerHubUsername:
    Type: String
    Default: nvadockeraccoount
    Description: Username for DockerHub account.
  DockerHubSecret:
    Type: String
    NoEcho: true
    Description: Secret to DockerHub account.
  Suffix:
    Type: String
    Default: ''
    Description: Suffix used for naming resources for feature branches to avoid conflicts.

Conditions:
  WithSuffix: !Not [ !Equals [ !Ref Suffix, '' ] ]
Resources:

  NvaEventsBus:
    Type: AWS::Events::EventBus
    Properties:
      Name: !If
        - WithSuffix
        - !Sub 'nva-events-default-bus-${AWS::AccountId}-${Suffix}'
        - !Sub 'nva-events-default-bus-${AWS::AccountId}'

  EventBusArn:
    Type: AWS::SSM::Parameter
    Properties:
      DataType: text
      Description: Parameter containing the default EventBridge bus used in NVA so that other services can be aware of the name of the bus.
      Name: /NVA/Events/EventsBusArn
      Type: String
      Value: !GetAtt NvaEventsBus.Arn

  EventBusName:
    Type: AWS::SSM::Parameter
    Properties:
      DataType: text
      Description: Parameter containing the default EventBridge bus used in NVA so that other services can be aware of the name of the bus.
      Name: /NVA/Events/EventsBusName
      Type: String
      Value: !GetAtt NvaEventsBus.Name

  EventsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName:  !If
        - WithSuffix
        - !Sub 'eventbridge-event-bodies-${AWS::AccountId}-${Suffix}'
        - !Sub 'eventbridge-event-bodies-${AWS::AccountId}'
      AccessControl: Private
      LifecycleConfiguration:
        Rules:
          - Id: "ExpiryPolicy"
            ExpirationInDays: 1
            NoncurrentVersionExpirationInDays: 1
            Status: Enabled
      VersioningConfiguration:
        Status: Suspended


  #This bucket could belong to the NVA Resources service but being there would
  # prevent us from being able to create and destroy the stack. Also, this bucket is read
  # by the search service, so it is a common resource by definition. The deletion of
  # the NVA Resources service stack should not necessarily break the NVA search service
  ExpandedResourcesBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !If
        - WithSuffix
        - !Sub 'persisted-resources-${AWS::AccountId}-${Suffix}'
        - !Sub 'persisted-resources-${AWS::AccountId}'
      AccessControl: Private
      VersioningConfiguration:
        Status: Suspended

  ResourceStorageBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      BucketName: !If
        - WithSuffix
        - !Sub 'nva-resource-storage-${AWS::AccountId}-${Suffix}'
        - !Sub 'nva-resource-storage-${AWS::AccountId}'
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders: ['*']
            AllowedMethods: [GET, PUT, POST, HEAD]
            AllowedOrigins: ['*']
            ExposedHeaders: [ETag]
      LifecycleConfiguration:
        Rules:
          - Id: RemoveFailedUploads
            Status: Enabled
            AbortIncompleteMultipartUpload:
              DaysAfterInitiation: 7
      VersioningConfiguration:
        Status: Enabled

  NVAStorageBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref ResourceStorageBucket
      PolicyDocument:
        Statement:
          - Action:
              - "s3:GetObject"
              - "s3:PutObject"
              - "s3:AbortMultipartUpload"
              - "s3:ListMultipartUploadParts"
              - "s3:ListBucketMultipartUploads"
            Effect: "Allow"
            Resource:
              - !Sub 'arn:aws:s3:::${ResourceStorageBucket}'
              - !Sub 'arn:aws:s3:::${ResourceStorageBucket}/*'
            Principal:
              Service:
                - lambda.amazonaws.com


  BackendDomainName:
    Type: AWS::ApiGateway::DomainName
    Properties:
      CertificateArn: !Ref BackendDomainCertificateArn
      DomainName: !Sub 'api.${CustomDomain}'
      EndpointConfiguration:
        Types:
          - !Ref ApiGatewayEndpointType

#================================= Parameters ============================================================

  EventsBucketName:
    Type: AWS::SSM::Parameter
    Properties:
      DataType: text
      Description: Parameter containing the bucket name of EventsBucket so that other services can be aware of the name of the bucket.
      Name: /NVA/Events/EventsBucketName
      Type: String
      Value: !Ref EventsBucket

  EventsBucketArn:
    Type: AWS::SSM::Parameter
    Properties:
      DataType: text
      Description: Parameter containing the bucket ARN of EventsBucket so that other services can be aware of the name of the bucket.
      Name: /NVA/Events/EventsBucketArn
      Type: String
      Value: !GetAtt EventsBucket.Arn

  ResourcesStorageBucketName:
    Type: AWS::SSM::Parameter
    Properties:
      DataType: text
      Name: /NVA/PublicationData
      Description: The actual published data. E.g. Journal papers, Datasets etc.
      Type: String
      Value: !Ref ResourceStorageBucket

  ExpandedResourcesBucketName:
    Type: AWS::SSM::Parameter
    Properties:
      DataType: text
      Description: Parameter containing the bucket name of EventsBucket so that other services can be aware of the name of the bucket.
      Name: /NVA/Events/PersistedEntriesBucketName
      Type: String
      Value: !Ref ExpandedResourcesBucket
  ExpandedResourcesBucketArn:
    Type: AWS::SSM::Parameter
    Properties:
      DataType: text
      Description: Parameter containing the bucket ARN of EventsBucket so that other services can be aware of the name of the bucket.
      Name: /NVA/Events/PersistedEntriesBucketArn
      Type: String
      Value: !GetAtt ExpandedResourcesBucket.Arn
  AlmaApiUriParameter:
    Type: AWS::SSM::Parameter
    Properties:
      DataType: text
      Description: Parameter containing the ALMA API URI
      Name: AlmaApiUri
      Type: String
      Value: !Ref AlmaApiUri

  BackendDomainCertificateArnParameter:
    Type: AWS::SSM::Parameter
    Properties:
      DataType: text
      Description: ARN for the certificate covering the API host/domain/API Gateway Custom Domain
      Name: /NVA/BackendDomainCertificate
      Type: String
      Value: !Ref BackendDomainCertificateArn

  FrontendDomainCertificateArnParameter:
    Type: AWS::SSM::Parameter
    Properties:
      DataType: text
      Description: ARN for the certificate covering the API host/domain/API Gateway Custom Domain
      Name: /NVA/FrontendDomainCertificate
      Type: String
      Value: !Ref FrontendDomainCertificateArn

  LegacyCustomDomainParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Description: Legacy Parameter Value for Custom Domain.
      Name: CustomDomain
      Type: String
      Value: !Ref CustomDomain

  BareHostParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Description: Hostname for BARE API
      Name: BareHost
      Type: String
      Value: !Ref BareHostUri

  DataCiteMdsEndpointParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Description: URI to Datacite MDS endpoint
      Name: dataCiteMdsHost
      Type: String
      Value: !Ref DataCiteMdsEndpoint

  DataCiteRestEndpointParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Description: URI to Datacite MDS endpoint
      Name: dataCiteRestHost
      Type: String
      Value: !Ref DataCiteRestEndpoint

  OrcidBaseUrlParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Description: URL to OrcId service
      Name: OrcidBaseUrl
      Type: String
      Value: !Ref OrcidBaseUrl

  #================================= Secrets ============================================================

  DockerHubSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: Secret containing DockerHub account information used in ontologies service to build code in docker.
      GenerateSecretString:
        SecretString: !Sub
                        - '{"DockerHubUsername": "${DockerHubUsername}", "DockerHubSecret": "${DockerHubSecret}"}'
                        - DockerHubUsername: !Ref DockerHubUsername
                        - DockerHubSecret: !Ref DockerHubSecret
      Name: DockerHubCredentials